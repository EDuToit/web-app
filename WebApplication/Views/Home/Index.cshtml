@{
    ViewData["Title"] = "Home Page";
}

<app asp-prerender-module="ClientApp/dist/main-server">Loading...</app>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnbeKYeCMSTPhkws7du0gvv_eSEp02Kog&callback=initMap">
</script>
<script
    src="https://code.jquery.com/jquery-3.3.1.min.js"
    integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
    crossorigin="anonymous"></script>
<script src="Scripts/mapper-api.js"></script>
<script src="~/dist/vendor.js" asp-append-version="true"></script>

@section scripts {
    <script src="~/dist/main-client.js" asp-append-version="true"></script>
    <script>

        var map;
        var drag = true;
        var path;
        var polygon = [];
        var multiPolygons = [];
        var poly;
        var addedPolygons = [];

        var url;
        var courseId = "3428bb12-3c87-4c4c-951f-311eca2d5d38";
        var apiPolygons;
        var geoJson;
        var tempPolys;
        var paths;
        var coordinates;
        var strings;

        function setupAPI() {
            $("#saveCourse").on("click",
                function() {
                    //create a new course
/*                    api.createCourse($("#courseName").val(),
                        function(result) {
                            console.log(JSON.stringify(result));
                        }
                    ); 
*/
                    //save the polygons to the course
                    for (var i = 0; i < multiPolygons.length; ++i) {
                        tempPolys = multiPolygons[i];
                        geoJson = 
                        {
                            "type": "Polygon",
                            "coordinates": [[]]
                        }

                        paths  = [];
                        paths = tempPolys.getPath().getArray();

                        for (var j = 0; j < paths.length; ++j) {
                            geoJson["coordinates"][0].push([paths[j].lng(), 
                                paths[j].lat()]);
                        }
                        geoJson["coordinates"][0].push([paths[0].lng(),
                            paths[0].lat()]);
//                        var coord = [];
//                        coord.push(coordinates);
//                        geoJson["coordinates"].push(coord);

                        
                        strings = JSON.stringify(geoJson);
                        api.addPolygon(api.courseId, strings, 
                            multiPolygons[i].terrainType, 
                            function (status) {
                                alert(status);
                            }
                        );

                    }
                }
            );

            $("#loadCourse").on("click",
                function() {
                    api.getPolygons(courseId,
                        function(result) {
                            apiPolygons = result;
                        }
                    );
                }
            );
        };


        function initMap() {
            map = new google.maps.Map(document.getElementById('map'),
                {
                    zoom: 20,
                    center: { lat: -25.658712, lng: 28.140347 },
                    mapTypeId: 'satellite',
                    panControl: false
                });
            poly = new google.maps.Polygon({
                strokeColor: '#463E3E',
                strokeOpacity: 1,
                strokeWeight: 5,
                fillColor: '#463E3E',
                fillOpacity: 0.4,
                draggable: true,
                terrainType: 0,
                editable: true
            });
            poly.setMap(map);

            //$http.get(url).then(successCallback, errorCallback);

            map.addListener('click', addLatLng);

           // getServerURL();
        }

        function getServerURL() {
            url = prompt("Enter server URL:", "localhost:5001");
            api.url = url;
            api.courseId = "3428bb12-3c87-4c4c-951f-311eca2d5d38";
        }

        function getColor(data) {
            switch (data) {
                case 0: return '#463E3E';
                case 1: return '#73A15D';
                case 2: return '#BADA55';
                case 3: return '#C2B280';
                case 4: return '#336699';
            }
        }

        function createCourse(data) {
            multiPolygons = [];

            for (var i = 0; i < data.length; ++i) {
                var dataCoords = data[i].polygon.coordinates[0];
                var polyCoords = [];

                for (var j = 0; j < dataCoords.length; ++j) {
                    polyCoords.push(new google.maps.LatLng(dataCoords[j][1], 
                        dataCoords[j][0]));
                }

                var temp = new google.maps.Polygon({
                    paths: polyCoords,
                    strokeOpacity: 1,
                    strokeWeight: 5,
                    fillOpacity: 0.4,
                    draggable: true,
                    editable: true,

                    // These are the properties unique per polygon
                    terrainType: data[i].type,
                    fillColor: getColor(data[i].type),
                    strokeColor: getColor(data[i].type)
                });
                temp.setMap(map);
            }
        }

        function addLatLng(event) {
            path = poly.getPath();
            // Because path is an MVCArray, we can simply append a new coordinate
            // and it will automatically appear.
            path.push(event.latLng);
            polygon.push(event.latLng);
        }

        function newPolygon() {
            poly.setOptions({ editable: false, draggable: false, clickable: false });
            if (path.length !== 0) {
                multiPolygons.push(poly);
                polygon = [];
                path = [];
            }

            poly = new google.maps.Polygon({
                strokeColor: '#463E3E',
                strokeOpacity: 1,
                strokeWeight: 5,
                fillColor: '#463E3E',
                fillOpacity: 0.4,
                draggable: true,
                terrainType: 0,
                editable: true
            });
            poly.setMap(map);

            var courseTypeSelector = document.getElementById("courseType");
            courseTypeSelector.selectedIndex = 0;
        }

        function toggleDraggable() {
            drag = !drag;
            map.setOptions({ draggable: drag });
        }

        function showAllCoordinates() {
            var display = "";
            var temp = "";
            for (var i = 0; i < multiPolygons.length; i++) {
                display += "index: " + i + " " + multiPolygons[i] + '\n\n';
            }
            if (polygon.length !== 0) {
                for (var j = 0; j < polygon.length; j++) {
                    temp += polygon[j] + ",";
                }
                display += "index: " + i + " " + temp + '\n\n';
            }
            console.log(display);

        }

        function showCurrentCoordinate() {
            var display = "";
            for (var i = 0; i < polygon.length; i++) {
                display += "index: " + i + " " + polygon[i] + '\n';
            }
            console.log(display);
        }

        function changePolyType() {
            var courseTypeSelector = document.getElementById("courseType");
            var colour = getColor(courseTypeSelector.selectedIndex);

            poly.setOptions({
                strokeColor: colour,
                fillColor: colour,
                zIndex: courseTypeSelector.selectedIndex,
                terrainType: courseTypeSelector.selectedIndex
            });
        }


        function resetMap() {
            initMap();
        }
       
        window.onload = setupAPI();
        window.onload = initMap();
    </script>


}
