@{
    ViewData["Title"] = "Home Page";
}

<app asp-prerender-module="ClientApp/dist/main-server">Loading...</app>

<script src="~/dist/vendor.js" asp-append-version="true"></script>

@section scripts {
    <script src="~/dist/main-client.js" asp-append-version="true"></script>
    <script>
        var map;
        var drag = true;
        // This example creates a simple polygon representing the Bermuda Triangle.
        var polygon = [];
        var multiPolygons = [];

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'),
                {
                    zoom: 20,
                    center: { lat: -25.658712, lng: 28.140347 },
                    mapTypeId: 'satellite',
                    panControl: false,
                });

            poly = new google.maps.Polygon({
                strokeColor: '#BADA55',
                strokeOpacity: 1,
                strokeWeight: 5,
                fillColor: '#BADA55',
                fillOpacity: 0.4,
                draggable: true,
                editable: true
            });
            poly.setMap(map);

            map.addListener('click', addLatLng);

        }

        function addLatLng(event) {
            var path = poly.getPath();

            // Because path is an MVCArray, we can simply append a new coordinate
            // and it will automatically appear.
            path.push(event.latLng);
            polygon.push(event.latLng);
            // Add a new marker at the new plotted point on the polyline.
            var marker = new google.maps.Polygon({
                position: event.latLng,
                title: '#' + path.getLength(),
                map: map
            });
        }

        function savePolygon() {
            multiPolygons.push(polygon);

            poly = new google.maps.Polygon({
                strokeColor: '#BADA55',
                strokeOpacity: 1,
                strokeWeight: 5,
                fillColor: '#BADA55',
                fillOpacity: 0.4,
                draggable: true,
                editable: true
            });
            poly.setMap(map);
        }

        function toggleDraggable() {
            drag = !drag;
            map.setOptions({ draggable: drag });
        }

        window.onload = initMap();
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnbeKYeCMSTPhkws7du0gvv_eSEp02Kog&callback=initMap&libraries=drawing">
    </script>

}